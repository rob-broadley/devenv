version: "3.7"

services:
  devenv:
    build:
      context: .
      dockerfile: Containerfile
      args:
        - USER=developer
        - HOST_DOCKER_GID

    # Name / Tag created image
    image: devenv
    # Run interactive with pseudo tty
    stdin_open: true
    tty: true
    # Make user id in container same as host user (maintain file ownership)
    userns_mode: "host"
    # Make container share host's network.
    # This allows host to access servers run inside container
    # without explicit binding of ports.
    network_mode: "host"
    # Disable selinux inside container
    # (otherwise no permission to access host users files).
    security_opt:
      - label:disable
    # Set up environment
    hostname: devcon
    environment:
      # For alternate time zones see:
      # `wikipedia.org/wiki/List_of_tz_database_time_zones`
      TZ: Europe/London
      LANG: en_gb.UTF-8
      HOSTHOME: $HOME
      # Uncomment if binding ssh auth sock to host's
      #SSH_AUTH_SOCK: /home/developer/.cache/ssh/ssh_auth.sock
    working_dir: /home/developer/projects

    volumes:
      # Mount current users home in container for access to files
      - type: bind
        source: $HOME
        target: $HOME
      # Mount host user's git configuration file to preserve global settings
      - type: bind
        source: $HOME/.config/git
        target: /home/developer/.config/git
      # Mount host user's gpg keys
      - type: bind
        source: $HOME/.gnupg
        target: /home/developer/.gnupg
      # Mount host user's ssh keys
      - type: bind
        source: $HOME/.ssh
        target: /home/developer/.ssh
      # Mount host docker.sock so containers run on host
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      # Bind ssh auth sock to host's
      #- type: bind
      #  source: $SSH_AUTH_SOCK
      #  target: /home/developer/.cache/ssh/ssh_auth.sock
      # Mount container users home as named volume for persistence of data
      #- type: volume
      #  source: developer_home
      #  target: /home/developer
      #  volume:
      #    nocopy: false
      # Mount config directory separately as named volume for persistence of data
      #- type: volume
      #  source: config
      #  target: /home/developer/.config
      #  volume:
      #    nocopy: false
      # Mount application data separately as named volume for persistence of data
      - type: volume
        source: appdata
        target: /home/developer/.local/share
        volume:
          nocopy: false
      # Mount projects directory separately as named volume for persistence of data
      - type: volume
        source: projects
        target: /home/developer/projects
        volume:
          nocopy: false


volumes:
  #  developer_home:
  #    name: developer_home
  #  config:
  #    name: developer_config
  appdata:
    name: developer_appdata
  projects:
    name: developer_projects
